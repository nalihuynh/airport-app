{"version":3,"sources":["components/Header.js","components/Footer.js","components/Places.js","components/AirportInfo.js","components/Routes.js","components/RoutesInfo.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","className","title","Footer","Places","places","map","place","id","PlaceId","PlaceName","CountryId","RegionId","CityId","CountryName","AirportInfo","useState","setPlaces","query","setQuery","showPlaces","setShowPlaces","onSubmit","e","a","reqOptions","method","headers","process","fetch","URLSearchParams","response","json","console","log","preventDefault","fetchMyAPI","htmlFor","value","onChange","target","required","Routes","symbol","currencies","Symbol","getCarrierName","carrierId","carrierName","carriers","forEach","carrier","CarrierId","Name","getPlaceName","placeId","placeName","quotes","quote","QuoteId","MinPrice","OutboundLeg","OriginId","DestinationId","DepartureDate","slice","CarrierIds","RoutesInfo","setQuotes","setCarriers","setCurrencies","showRoutes","setShowRoutes","originPlace","setOrigin","destinationPlace","setDestination","outboundDate","setDate","currency","setCurrency","class","Quotes","Carriers","Currencies","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.14c50375.chunk.js","sourcesContent":["import React from 'react';\nimport './Header.css';\n\nfunction Header(props) { \n    return(\n        <div className=\"header\">\n            {props.title}\n         </div>\n    )\n}\n\nexport default Header;","import React from 'react';\nimport './Footer.css';\n\nfunction Footer(props) { \n    return(\n        <div className=\"footer\">\n            {props.title}\n        </div>\n    )\n}\n\nexport default Footer;","import React from 'react';\nimport './Places.css';\n\nfunction Places(props) { \n    return(\n        <div className=\"places\">\n            <table>\n                <thead>\n                    <tr>\n                        <th>Airport ID</th>\n                        <th>Airport Name</th>\n                        <th>Country ID</th>\n                        <th>Region ID</th>\n                        <th>City ID</th>\n                        <th>Country Name</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {props.places.map(place => {\n                        return (<tr id={place.PlaceId}>\n                            <th>{place.PlaceId}</th>\n                            <th>{place.PlaceName}</th>\n                            <th>{place.CountryId}</th>\n                            <th>{place.RegionId}</th>\n                            <th>{place.CityId}</th>\n                            <th>{place.CountryName}</th>\n                        </tr>)\n                    })}\n                </tbody>\n            </table>\n         </div>\n    )\n}\n\nexport default Places;","import React, { useState } from 'react';\nimport './AirportInfo.css';\nimport Places from './Places';\n\nfunction AirportInfo() { \n    const [places,setPlaces] = useState([])\n    const [query,setQuery] = useState(\"\")\n    const [showPlaces,setShowPlaces] = useState(false)\n\n    function handleSubmit(e) {\n        e.preventDefault()\n        async function fetchMyAPI() {\n            const reqOptions = {\n                method: 'GET',\n                headers: {\n                    \"x-rapidapi-key\": `${process.env.REACT_APP_API_KEY}`,\n                    \"x-rapidapi-host\": \"skyscanner-skyscanner-flight-search-v1.p.rapidapi.com\",\n                    \"useQueryString\": true\n                }\n            }\n            let response = await fetch(\"https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/autosuggest/v1.0/US/USD/en-US/?\" + new URLSearchParams({query: query}), reqOptions)\n            response = await response.json()\n            console.log(response.Places)\n            setPlaces(response.Places)\n        }\n        fetchMyAPI()\n        setShowPlaces(true)\n        setQuery(\"\")\n    }\n    return(\n        <div className=\"airportinfo\">\n            <h1>Places to Airport ID</h1>\n            <p>Enter a state, country, or city to search for your Airport ID</p>\n           <form onSubmit={handleSubmit}>\n                <label htmlFor=\"queryInput\">State, Country, or City:</label>\n                <input id=\"queryInput\" value={query} onChange={e => setQuery(e.target.value)} required/>\n                <button className=\"search\">Search</button>\n           </form>\n           { showPlaces ? <Places places={places}></Places> : <></>}\n        </div>\n    )\n}\n\nexport default AirportInfo;\n","import React from 'react';\nimport './Routes.css';\n\nfunction Routes(props) { \n    const symbol = props.currencies[0] ? props.currencies[0].Symbol : \"\"\n    function getCarrierName(carrierId){\n        let carrierName = \"\"\n        props.carriers.forEach(carrier => {\n            if (carrier.CarrierId === carrierId){\n                carrierName = carrier.Name\n            }\n        });\n        return carrierName\n    }\n\n    function getPlaceName(placeId){\n        let placeName = \"\"\n        props.places.forEach(place => {\n            if (place.PlaceId === placeId){\n                placeName = place.Name\n            }\n        });\n        return placeName\n    }\n\n    return(\n        <div className=\"routes\">\n            <table>\n                <thead>\n                    <tr>\n                        <th>Prices</th>\n                        <th>Origin</th>\n                        <th>Destination</th>\n                        <th>Departure Date</th>\n                        <th>Carrier Name</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {props.quotes.map(quote => {\n                        return (<tr id={quote.QuoteId}>\n                            <th>{`${symbol}${quote.MinPrice}`}</th>\n                            <th>{getPlaceName(quote.OutboundLeg.OriginId)}</th>\n                            <th>{getPlaceName(quote.OutboundLeg.DestinationId)}</th>\n                            <th>{quote.OutboundLeg.DepartureDate.slice(0, -9)}</th>\n                            <th>{getCarrierName(quote.OutboundLeg.CarrierIds[0])}</th>\n                        </tr>)\n                    })}\n                </tbody>\n            </table>\n         </div>\n    )\n}\n\nexport default Routes;","import React, { useState } from 'react';\nimport './RoutesInfo.css';\nimport Routes from './Routes';\n\nfunction RoutesInfo() { \n    const [quotes,setQuotes] = useState([])\n    const [carriers,setCarriers] = useState([])\n    const [places,setPlaces] = useState([])\n    const [currencies,setCurrencies] = useState([])\n    const [showRoutes,setShowRoutes] = useState(false)\n    \n    const [originPlace, setOrigin] = useState(\"\")\n    const [destinationPlace, setDestination] = useState(\"\")\n    const [outboundDate, setDate] = useState(\"\")\n    const [currency, setCurrency] = useState(\"\")\n\n\n    function handleSubmit(e) {\n        e.preventDefault()\n        async function fetchMyAPI() {\n            const reqOptions = {\n                method: 'GET',\n                headers: {\n                    \"x-rapidapi-key\": `${process.env.REACT_APP_API_KEY}`,\n                    \"x-rapidapi-host\": \"skyscanner-skyscanner-flight-search-v1.p.rapidapi.com\",\n                    \"useQueryString\": true\n                }\n            }\n            let response = await fetch(`https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/browsequotes/v1.0/US/${currency}/en-US/${originPlace}/${destinationPlace}/${outboundDate}`, reqOptions)\n            response = await response.json()\n            console.log(response)\n            setQuotes(response.Quotes)\n            setCarriers(response.Carriers)\n            setPlaces(response.Places)\n            setCurrencies(response.Currencies)\n        }\n        fetchMyAPI()\n        setShowRoutes(true)\n    }\n\n\n    return(\n        <div className=\"routesinfo\"> \n        <h1>Flights</h1>\n            <ol>\n                <li>Find origin place <mark class = \"red\">Airport ID</mark> and destination place <mark class = \"red\">Airport ID</mark> above</li>\n                <li>Format outbound date as <mark class = \"red\">\"yyyy-mm-dd\", \"yyyy-mm\", or \"anytime\"</mark></li>\n                <li>Enter your currency as a <mark class = \"red\">3-Letter code </mark>(ex. USD, EUR, CAD, etc.)</li>\n            </ol>\n            \n                <form onSubmit={handleSubmit}>\n                <div class=\"forminfo\">\n                    <div class=\"formrow\">\n                        <label htmlFor=\"queryInput\">Origin Place:</label>\n                        <input id=\"queryInput\" value={originPlace} onChange={e => setOrigin(e.target.value)} required/>\n\n                        <label htmlFor=\"queryInput\">Destination Place:</label>\n                        <input id=\"queryInput\" value={destinationPlace} onChange={e => setDestination(e.target.value)} required/>\n                    </div>\n                    \n                    <div class=\"formrow\">\n                        <label htmlFor=\"queryInput\">Outbound Date:</label>\n                        <input id=\"queryInput\" value={outboundDate} onChange={e => setDate(e.target.value)} required/>\n\n                        <label htmlFor=\"queryInput\">Currency:</label>\n                        <input id=\"queryInput\" value={currency} onChange={e => setCurrency(e.target.value)} required/>\n                    </div>\n                </div>\n                <button className=\"search\">Search</button>\n\n            </form>\n            \n           \n           { showRoutes ? <Routes quotes={quotes} carriers={carriers} places={places} currencies={currencies}></Routes> : <></>}\n        </div>\n    )\n\n}\n\nexport default RoutesInfo;\n","import React from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport AirportInfo from './components/AirportInfo';\nimport RoutesInfo from './components/RoutesInfo';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header title=\"Flight Search\"></Header>\n      <AirportInfo></AirportInfo>\n      <RoutesInfo></RoutesInfo>\n      <Footer title=\"Nali Huynh - 2021\"></Footer>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}